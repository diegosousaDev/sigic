/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.sigic.view;

import br.com.sigic.dao.ClienteDao;
import br.com.sigic.dao.DaoFactory;
import br.com.sigic.dao.EnderecoDao;
import br.com.sigic.dao.StatusPessoaDao;
import br.com.sigic.dao.TelefoneDao;
import br.com.sigic.dao.TipoTelDao;
import br.com.sigic.db.ValidacaoException;
import br.com.sigic.model.Cliente;
import br.com.sigic.model.Endereco;
import br.com.sigic.model.StatusPessoa;
import br.com.sigic.model.Telefone;
import br.com.sigic.model.TipoTel;
import br.com.sigic.view.utils.LimpaTela;
import br.com.sigic.view.utils.ViaCep;
import java.text.ParseException;
import java.util.List;
import javax.swing.JComboBox;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author eder
 */
public class FrmCadastroCliente extends javax.swing.JFrame {

    ClienteDao clienteDao = DaoFactory.criarClienteDao();
    StatusPessoaDao statusPessoaDao = DaoFactory.criarStatusPessoaDao();
    TipoTelDao tipoTelDao = DaoFactory.criarTipoTelDao();
    TelefoneDao telefoneDao = DaoFactory.criarTelefoneDao();
    EnderecoDao enderecoDao = DaoFactory.criarEnderecoDao();

    /**
     * Creates new form CadastroFuncionario
     */
    public FrmCadastroCliente() {
        initComponents();
        iniciarComboTipoCelular();
        iniciarComboStatusPessoa();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painelTitulo = new javax.swing.JPanel();
        lblTitulo = new javax.swing.JLabel();
        painelBotoes = new javax.swing.JPanel();
        btnNovo = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();
        btnSair = new javax.swing.JButton();
        btnAlterar = new javax.swing.JButton();
        painelAbas = new javax.swing.JTabbedPane();
        painelCadastraCliente = new javax.swing.JPanel();
        scrolPaneObservacoes = new javax.swing.JScrollPane();
        txtObservavacoes = new javax.swing.JTextArea();
        painelTelefones = new javax.swing.JPanel();
        comboTipoTel = new javax.swing.JComboBox<>();
        comboTipoTel1 = new javax.swing.JComboBox<>();
        comboTipoTel2 = new javax.swing.JComboBox<>();
        txtDdd = new javax.swing.JFormattedTextField();
        txtDdd1 = new javax.swing.JFormattedTextField();
        txtDdd2 = new javax.swing.JFormattedTextField();
        txtTel = new javax.swing.JFormattedTextField();
        txtTel1 = new javax.swing.JFormattedTextField();
        txtTel2 = new javax.swing.JFormattedTextField();
        txtCodigo = new javax.swing.JTextField();
        lblCodigo = new javax.swing.JLabel();
        lblNome = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        lblEmail = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        lblCep = new javax.swing.JLabel();
        txtRua = new javax.swing.JTextField();
        lblEndereco = new javax.swing.JLabel();
        lblComplemento = new javax.swing.JLabel();
        txtComplemento = new javax.swing.JTextField();
        lblBairro = new javax.swing.JLabel();
        txtBairro = new javax.swing.JTextField();
        lblCidade = new javax.swing.JLabel();
        txtCidade = new javax.swing.JTextField();
        lblEstado = new javax.swing.JLabel();
        lblObservacoes = new javax.swing.JLabel();
        lblDataNasc = new javax.swing.JLabel();
        txtDataNasc = new javax.swing.JFormattedTextField();
        comboCpfCnpj = new javax.swing.JComboBox<>();
        lblApelido = new javax.swing.JLabel();
        txtApelido = new javax.swing.JTextField();
        txtCep = new javax.swing.JFormattedTextField();
        txtNumero = new javax.swing.JTextField();
        lblComplemento1 = new javax.swing.JLabel();
        comboStatusPessoa = new javax.swing.JComboBox<>();
        txtCpf = new javax.swing.JFormattedTextField();
        comboEstado = new javax.swing.JComboBox<>();
        painelConsultaCliente = new javax.swing.JPanel();
        scollPaneConsultaCliente = new javax.swing.JScrollPane();
        tabelaConsultaCliente = new javax.swing.JTable();
        txtBusca = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Sigic | Cadastro de Clientes");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        painelTitulo.setBackground(new java.awt.Color(0, 153, 204));

        lblTitulo.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        lblTitulo.setForeground(new java.awt.Color(255, 255, 255));
        lblTitulo.setText("Cadastro de Clientes");

        javax.swing.GroupLayout painelTituloLayout = new javax.swing.GroupLayout(painelTitulo);
        painelTitulo.setLayout(painelTituloLayout);
        painelTituloLayout.setHorizontalGroup(
            painelTituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelTituloLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitulo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        painelTituloLayout.setVerticalGroup(
            painelTituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelTituloLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(lblTitulo)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        painelBotoes.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnNovo.setBackground(new java.awt.Color(0, 153, 204));
        btnNovo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnNovo.setForeground(new java.awt.Color(255, 255, 255));
        btnNovo.setText("+ Novo");
        btnNovo.setContentAreaFilled(false);
        btnNovo.setOpaque(true);
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        btnSalvar.setBackground(new java.awt.Color(0, 153, 204));
        btnSalvar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnSalvar.setForeground(new java.awt.Color(255, 255, 255));
        btnSalvar.setText("Salvar Novo");
        btnSalvar.setContentAreaFilled(false);
        btnSalvar.setOpaque(true);
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        btnSair.setBackground(new java.awt.Color(0, 153, 204));
        btnSair.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnSair.setForeground(new java.awt.Color(255, 255, 255));
        btnSair.setText("Sair");
        btnSair.setContentAreaFilled(false);
        btnSair.setOpaque(true);
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });

        btnAlterar.setBackground(new java.awt.Color(0, 153, 204));
        btnAlterar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnAlterar.setForeground(new java.awt.Color(255, 255, 255));
        btnAlterar.setText("Alterar");
        btnAlterar.setContentAreaFilled(false);
        btnAlterar.setOpaque(true);
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelBotoesLayout = new javax.swing.GroupLayout(painelBotoes);
        painelBotoes.setLayout(painelBotoesLayout);
        painelBotoesLayout.setHorizontalGroup(
            painelBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelBotoesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSalvar)
                .addGap(18, 18, 18)
                .addComponent(btnAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSair, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(200, 200, 200))
        );
        painelBotoesLayout.setVerticalGroup(
            painelBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelBotoesLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(painelBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNovo, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSair, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        painelAbas.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        painelAbas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                painelAbasMouseClicked(evt);
            }
        });

        txtObservavacoes.setColumns(20);
        txtObservavacoes.setRows(5);
        scrolPaneObservacoes.setViewportView(txtObservavacoes);

        painelTelefones.setBorder(javax.swing.BorderFactory.createTitledBorder("Telefones"));

        comboTipoTel.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        comboTipoTel.setMaximumRowCount(12);
        comboTipoTel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboTipoTelActionPerformed(evt);
            }
        });

        comboTipoTel1.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        comboTipoTel1.setMaximumRowCount(12);
        comboTipoTel1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboTipoTel1ActionPerformed(evt);
            }
        });

        comboTipoTel2.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        comboTipoTel2.setMaximumRowCount(12);
        comboTipoTel2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboTipoTel2ActionPerformed(evt);
            }
        });

        try {
            txtDdd.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtDdd.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        try {
            txtDdd1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtDdd1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtDdd1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDdd1ActionPerformed(evt);
            }
        });

        try {
            txtDdd2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtDdd2.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        try {
            txtTel.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtTel.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        try {
            txtTel1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtTel1.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        try {
            txtTel2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtTel2.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        javax.swing.GroupLayout painelTelefonesLayout = new javax.swing.GroupLayout(painelTelefones);
        painelTelefones.setLayout(painelTelefonesLayout);
        painelTelefonesLayout.setHorizontalGroup(
            painelTelefonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelTelefonesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelTelefonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelTelefonesLayout.createSequentialGroup()
                        .addComponent(comboTipoTel2, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDdd2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTel2, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE))
                    .addGroup(painelTelefonesLayout.createSequentialGroup()
                        .addGroup(painelTelefonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, painelTelefonesLayout.createSequentialGroup()
                                .addComponent(comboTipoTel, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDdd, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, painelTelefonesLayout.createSequentialGroup()
                                .addComponent(comboTipoTel1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDdd1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(painelTelefonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTel)
                            .addComponent(txtTel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE))))
                .addContainerGap())
        );
        painelTelefonesLayout.setVerticalGroup(
            painelTelefonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelTelefonesLayout.createSequentialGroup()
                .addGroup(painelTelefonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboTipoTel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, Short.MAX_VALUE)
                    .addComponent(txtDdd)
                    .addComponent(txtTel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelTelefonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDdd1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboTipoTel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(painelTelefonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtDdd2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(comboTipoTel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTel2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        txtCodigo.setEditable(false);

        lblCodigo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblCodigo.setText("Código");

        lblNome.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblNome.setText("Nome");

        txtNome.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNomeKeyPressed(evt);
            }
        });

        lblEmail.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblEmail.setText("E-mail");

        lblCep.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblCep.setText("CEP:");

        txtRua.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtRuaKeyPressed(evt);
            }
        });

        lblEndereco.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblEndereco.setText("Endereço");

        lblComplemento.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblComplemento.setText("Complemen.");

        lblBairro.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblBairro.setText("Bairro");

        lblCidade.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblCidade.setText("Cidade");

        lblEstado.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblEstado.setText("Estado");

        lblObservacoes.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblObservacoes.setText("Observações");

        lblDataNasc.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblDataNasc.setText("Data Nasc.");

        try {
            txtDataNasc.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtDataNasc.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        comboCpfCnpj.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        comboCpfCnpj.setMaximumRowCount(12);
        comboCpfCnpj.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "CPF", "CNPJ" }));
        comboCpfCnpj.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                comboCpfCnpjFocusLost(evt);
            }
        });
        comboCpfCnpj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboCpfCnpjActionPerformed(evt);
            }
        });

        lblApelido.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblApelido.setText("Apelido");

        try {
            txtCep.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##.###-###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCep.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCep.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCepFocusLost(evt);
            }
        });
        txtCep.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCepKeyPressed(evt);
            }
        });

        txtNumero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNumeroActionPerformed(evt);
            }
        });
        txtNumero.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNumeroKeyPressed(evt);
            }
        });

        lblComplemento1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblComplemento1.setText("Número");

        comboStatusPessoa.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        comboStatusPessoa.setMaximumRowCount(12);

        try {
            txtCpf.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCpf.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCpf.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCpfFocusLost(evt);
            }
        });
        txtCpf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCpfActionPerformed(evt);
            }
        });
        txtCpf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCpfKeyPressed(evt);
            }
        });

        comboEstado.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        comboEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione", "AC", "AL", "AP", "AM", "BA", "CE", "DF", "ES", "GO", "MA", "MT", "MS", "MG", "PA", "PB", "PR", "PE", "PI", "RJ", "RN", "RS", "RO", "RR", "SC", "SP", "SE", "TO" }));
        comboEstado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                comboEstadoMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout painelCadastraClienteLayout = new javax.swing.GroupLayout(painelCadastraCliente);
        painelCadastraCliente.setLayout(painelCadastraClienteLayout);
        painelCadastraClienteLayout.setHorizontalGroup(
            painelCadastraClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelCadastraClienteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelCadastraClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblObservacoes)
                    .addComponent(lblBairro)
                    .addComponent(lblNome)
                    .addComponent(lblCodigo)
                    .addComponent(lblEmail)
                    .addComponent(lblDataNasc)
                    .addComponent(lblEndereco))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelCadastraClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelCadastraClienteLayout.createSequentialGroup()
                        .addGroup(painelCadastraClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtEmail)
                            .addGroup(painelCadastraClienteLayout.createSequentialGroup()
                                .addComponent(txtNome)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblApelido)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtApelido, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(painelCadastraClienteLayout.createSequentialGroup()
                                .addComponent(txtDataNasc, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lblCep)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCep, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(painelCadastraClienteLayout.createSequentialGroup()
                                .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboCpfCnpj, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboStatusPessoa, 0, 120, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addComponent(painelTelefones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(painelCadastraClienteLayout.createSequentialGroup()
                        .addComponent(scrolPaneObservacoes, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelCadastraClienteLayout.createSequentialGroup()
                        .addGroup(painelCadastraClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(painelCadastraClienteLayout.createSequentialGroup()
                                .addComponent(txtRua)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblComplemento1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblComplemento)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(painelCadastraClienteLayout.createSequentialGroup()
                                .addComponent(txtBairro)
                                .addGap(18, 18, 18)
                                .addComponent(lblCidade)
                                .addGap(18, 18, 18)
                                .addComponent(txtCidade, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lblEstado)
                                .addGap(12, 12, 12)))
                        .addGroup(painelCadastraClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(comboEstado, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtComplemento, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE))
                        .addGap(6, 6, 6)))
                .addContainerGap())
        );
        painelCadastraClienteLayout.setVerticalGroup(
            painelCadastraClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelCadastraClienteLayout.createSequentialGroup()
                .addGroup(painelCadastraClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelCadastraClienteLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(painelCadastraClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCodigo)
                            .addComponent(comboCpfCnpj, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboStatusPessoa, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCpf))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(painelCadastraClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblNome)
                            .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(painelCadastraClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtApelido, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lblApelido)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(painelCadastraClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblEmail)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(painelCadastraClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCep)
                            .addComponent(lblDataNasc)
                            .addComponent(txtDataNasc)
                            .addComponent(txtCep))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(painelCadastraClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtRua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblEndereco)
                            .addComponent(lblComplemento)
                            .addComponent(txtComplemento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblComplemento1)
                            .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(painelCadastraClienteLayout.createSequentialGroup()
                        .addComponent(painelTelefones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelCadastraClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBairro)
                    .addComponent(txtBairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCidade)
                    .addComponent(txtCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEstado)
                    .addComponent(comboEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelCadastraClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblObservacoes)
                    .addComponent(scrolPaneObservacoes, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        painelAbas.addTab("Cadastrar", painelCadastraCliente);

        tabelaConsultaCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nome", "E-mail", "CPF / CNPJ", "Data Nascimento", "Apelido", "Observações", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabelaConsultaCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaConsultaClienteMouseClicked(evt);
            }
        });
        scollPaneConsultaCliente.setViewportView(tabelaConsultaCliente);

        txtBusca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtBuscaKeyPressed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(0, 153, 204));
        jLabel1.setText("Digite para Pesquisar");

        javax.swing.GroupLayout painelConsultaClienteLayout = new javax.swing.GroupLayout(painelConsultaCliente);
        painelConsultaCliente.setLayout(painelConsultaClienteLayout);
        painelConsultaClienteLayout.setHorizontalGroup(
            painelConsultaClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelConsultaClienteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelConsultaClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scollPaneConsultaCliente, javax.swing.GroupLayout.DEFAULT_SIZE, 870, Short.MAX_VALUE)
                    .addGroup(painelConsultaClienteLayout.createSequentialGroup()
                        .addComponent(txtBusca, javax.swing.GroupLayout.PREFERRED_SIZE, 451, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        painelConsultaClienteLayout.setVerticalGroup(
            painelConsultaClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelConsultaClienteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelConsultaClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBusca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(scollPaneConsultaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        painelAbas.addTab("Consultar", painelConsultaCliente);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelTitulo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(painelBotoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(painelAbas))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(painelTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(painelAbas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(painelBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed

        limpatela();
        painelAbas.setSelectedIndex(0);

    }//GEN-LAST:event_btnNovoActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        if (validarCampos()) {
            cadastrarCliente();
        }
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnSairActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        listarClientes();
    }//GEN-LAST:event_formWindowActivated

    private void painelAbasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_painelAbasMouseClicked

    }//GEN-LAST:event_painelAbasMouseClicked

    private void txtDdd1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDdd1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDdd1ActionPerformed

    private void txtCepFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCepFocusLost
        ViaCep viaCep = new ViaCep();
        viaCep.buscarCep(txtCep.getText());

        txtRua.setText(viaCep.getLogradouro());
        txtBairro.setText(viaCep.getBairro());
        txtCidade.setText(viaCep.getCidade());
        comboEstado.setSelectedItem(viaCep.getUf());
    }//GEN-LAST:event_txtCepFocusLost

    private void comboCpfCnpjActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboCpfCnpjActionPerformed
        iniciarCampoCpf();
    }//GEN-LAST:event_comboCpfCnpjActionPerformed

    private void txtCpfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCpfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCpfActionPerformed

    private void txtCpfFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCpfFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCpfFocusLost

    private void comboCpfCnpjFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_comboCpfCnpjFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_comboCpfCnpjFocusLost

    private void tabelaConsultaClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaConsultaClienteMouseClicked
        transferirDados();
    }//GEN-LAST:event_tabelaConsultaClienteMouseClicked

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
        if (txtCodigo.getText().length() > 0) {
            if (alterarCliente()) {
                JOptionPane.showMessageDialog(null, "Registro alterado com sucesso.");
                limpatela();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Cliente ainda não foi cadastrado, selecione o botão Salvar Novo para poder editar.");
        }
    }//GEN-LAST:event_btnAlterarActionPerformed

    private void comboTipoTelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboTipoTelActionPerformed
        formataCel(comboTipoTel, txtTel);
    }//GEN-LAST:event_comboTipoTelActionPerformed

    private void comboTipoTel1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboTipoTel1ActionPerformed
        formataCel(comboTipoTel1, txtTel1);
    }//GEN-LAST:event_comboTipoTel1ActionPerformed

    private void comboTipoTel2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboTipoTel2ActionPerformed
        formataCel(comboTipoTel2, txtTel2);
    }//GEN-LAST:event_comboTipoTel2ActionPerformed

    private void txtCpfKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCpfKeyPressed
        txtCpf.setBackground(new java.awt.Color(255, 255, 255));
    }//GEN-LAST:event_txtCpfKeyPressed

    private void txtNomeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNomeKeyPressed
        txtNome.setBackground(new java.awt.Color(255, 255, 255));
    }//GEN-LAST:event_txtNomeKeyPressed

    private void txtCepKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCepKeyPressed
        txtCep.setBackground(new java.awt.Color(255, 255, 255));
    }//GEN-LAST:event_txtCepKeyPressed

    private void txtRuaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRuaKeyPressed
        txtRua.setBackground(new java.awt.Color(255, 255, 255));
    }//GEN-LAST:event_txtRuaKeyPressed

    private void txtNumeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNumeroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumeroActionPerformed

    private void txtNumeroKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroKeyPressed
        txtNumero.setBackground(new java.awt.Color(255, 255, 255));
    }//GEN-LAST:event_txtNumeroKeyPressed

    private void comboEstadoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboEstadoMouseClicked
        comboEstado.setBackground(new java.awt.Color(255, 255, 255));
    }//GEN-LAST:event_comboEstadoMouseClicked

    private void txtBuscaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscaKeyPressed
        String nome = "%" + txtBusca.getText() + "%";
        pesquisarPorNome(nome);
    }//GEN-LAST:event_txtBuscaKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmCadastroCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmCadastroCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmCadastroCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmCadastroCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmCadastroCliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnNovo;
    private javax.swing.JButton btnSair;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JComboBox<String> comboCpfCnpj;
    private javax.swing.JComboBox<String> comboEstado;
    private javax.swing.JComboBox<StatusPessoa> comboStatusPessoa;
    private javax.swing.JComboBox<TipoTel> comboTipoTel;
    private javax.swing.JComboBox<TipoTel> comboTipoTel1;
    private javax.swing.JComboBox<TipoTel> comboTipoTel2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblApelido;
    private javax.swing.JLabel lblBairro;
    private javax.swing.JLabel lblCep;
    private javax.swing.JLabel lblCidade;
    private javax.swing.JLabel lblCodigo;
    private javax.swing.JLabel lblComplemento;
    private javax.swing.JLabel lblComplemento1;
    private javax.swing.JLabel lblDataNasc;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblEndereco;
    private javax.swing.JLabel lblEstado;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblObservacoes;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JTabbedPane painelAbas;
    private javax.swing.JPanel painelBotoes;
    private javax.swing.JPanel painelCadastraCliente;
    private javax.swing.JPanel painelConsultaCliente;
    private javax.swing.JPanel painelTelefones;
    private javax.swing.JPanel painelTitulo;
    private javax.swing.JScrollPane scollPaneConsultaCliente;
    private javax.swing.JScrollPane scrolPaneObservacoes;
    private javax.swing.JTable tabelaConsultaCliente;
    private javax.swing.JTextField txtApelido;
    private javax.swing.JTextField txtBairro;
    private javax.swing.JTextField txtBusca;
    private javax.swing.JFormattedTextField txtCep;
    private javax.swing.JTextField txtCidade;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtComplemento;
    private javax.swing.JFormattedTextField txtCpf;
    private javax.swing.JFormattedTextField txtDataNasc;
    private javax.swing.JFormattedTextField txtDdd;
    private javax.swing.JFormattedTextField txtDdd1;
    private javax.swing.JFormattedTextField txtDdd2;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtNumero;
    private javax.swing.JTextArea txtObservavacoes;
    private javax.swing.JTextField txtRua;
    private javax.swing.JFormattedTextField txtTel;
    private javax.swing.JFormattedTextField txtTel1;
    private javax.swing.JFormattedTextField txtTel2;
    // End of variables declaration//GEN-END:variables

    private void cadastrarCliente() {

        List<Cliente> clientes = clienteDao.findAll();

        try {

            Cliente obj = new Cliente();
            obj.setNome(txtNome.getText());
            obj.setEmail(txtEmail.getText());
            obj.setCpf(txtCpf.getText());
            obj.setNascimento(txtDataNasc.getText());
            obj.setApelido(txtApelido.getText());
            obj.setObservacoes(txtObservavacoes.getText());
            obj.setStatus(new StatusPessoa(comboStatusPessoa.getItemAt(comboStatusPessoa.getSelectedIndex()).getId(), null));

            for (Cliente cliente : clientes) {
                if (cliente.getCpf().equals(txtCpf.getText())) {
                    throw new ValidacaoException("CPF já cadastrado");
                }
            }
            clienteDao.insert(obj);
            cadastrarTelefones();
            cadastrarEndereco();
            JOptionPane.showMessageDialog(null, "Registro incluído com sucesso.");
            limpatela();
        } catch (NullPointerException | ValidacaoException e) {
            JOptionPane.showMessageDialog(null, "Erro ao inserir dados. " + e.getMessage());
        }
    }

    private void cadastrarEndereco() {
        try {

            List<Cliente> cliente = clienteDao.findAll();
            for (Cliente clientes : cliente) {

                if (clientes.getCpf().equals(txtCpf.getText())) {

                    Endereco obj = new Endereco();

                    obj.setRua(txtRua.getText());
                    obj.setNumero(Integer.parseInt(txtNumero.getText()));
                    obj.setComplemento(txtComplemento.getText());
                    obj.setBairro(txtBairro.getText());
                    obj.setCidade(txtCidade.getText());
                    obj.setEstado(comboEstado.getSelectedItem().toString());
                    obj.setCep(txtCep.getText());
                    obj.setCliente(clientes);

                    enderecoDao.insertCliente(obj);
                }
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao inserir endereco." + e.getMessage());
            e.printStackTrace();
        }
    }

    private void cadastrarTelefones() {

        try {

            List<Cliente> cliente = clienteDao.findAll();
            for (Cliente clientes : cliente) {

                if (clientes.getCpf().equals(txtCpf.getText())) {

                    Telefone obj = new Telefone();
                    obj.setTipo(comboTipoTel.getSelectedItem().toString());
                    obj.setDdd(txtDdd.getText());
                    obj.setNumero(txtTel.getText());
                    obj.setTipo1(comboTipoTel1.getSelectedItem().toString());
                    obj.setDdd1(txtDdd1.getText());
                    obj.setNumero1(txtTel1.getText());
                    obj.setTipo2(comboTipoTel2.getSelectedItem().toString());
                    obj.setDdd2(txtDdd2.getText());
                    obj.setNumero2(txtTel2.getText());
                    obj.setCliente(clientes);

                    telefoneDao.insertCliente(obj);

                }
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Insira um telefone" + e.getMessage());
        }
    }

    private boolean alterarCliente() {

        try {

            Cliente obj = new Cliente();
            obj.setId(Integer.parseInt(txtCodigo.getText()));
            obj.setNome(txtNome.getText());
            obj.setEmail(txtEmail.getText());
            obj.setCpf(txtCpf.getText());
            obj.setNascimento(txtDataNasc.getText());
            obj.setApelido(txtApelido.getText());
            obj.setObservacoes(txtObservavacoes.getText());
            obj.setStatus(new StatusPessoa(comboStatusPessoa.getItemAt(comboStatusPessoa.getSelectedIndex()).getId(), null));

            clienteDao.update(obj);
            alterarEndereco();
            alterarTelefone();
            return true;
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Erro ao inserir dados." + e.getMessage());
        }
        return false;
    }

    private void alterarEndereco() {

        Endereco obj = new Endereco();
        Cliente cli = new Cliente();
        cli.setId(Integer.parseInt(txtCodigo.getText()));

        obj.setRua(txtRua.getText());
        obj.setNumero(Integer.parseInt(txtNumero.getText()));
        obj.setComplemento(txtComplemento.getText());
        obj.setBairro(txtBairro.getText());
        obj.setCidade(txtCidade.getText());
        obj.setEstado(comboEstado.getSelectedItem().toString());
        obj.setCep(txtCep.getText());
        obj.setCliente(cli);

        enderecoDao.updateCliente(obj);

    }

    private void alterarTelefone() {

        Telefone tel = new Telefone();
        Cliente cli = new Cliente();
        cli.setId(Integer.parseInt(txtCodigo.getText()));

        tel.setTipo(comboTipoTel.getSelectedItem().toString());
        tel.setDdd(txtDdd.getText());
        tel.setNumero(txtTel.getText());
        tel.setTipo1(comboTipoTel1.getSelectedItem().toString());
        tel.setDdd1(txtDdd1.getText());
        tel.setNumero1(txtTel1.getText());
        tel.setTipo2(comboTipoTel2.getSelectedItem().toString());
        tel.setDdd2(txtDdd2.getText());
        tel.setNumero2(txtTel2.getText());

        tel.setCliente(cli);

        telefoneDao.updateCliente(tel);

    }

    private void listarClientes() {

        List<Cliente> lista = clienteDao.findAll();
        DefaultTableModel dados = (DefaultTableModel) tabelaConsultaCliente.getModel();
        dados.setNumRows(0);

        lista.stream().forEach((c) -> {
            dados.addRow(new Object[]{
                c.getId(),
                c.getNome(),
                c.getEmail(),
                c.getCpf(),
                c.getNascimento(),
                c.getApelido(),
                c.getObservacoes(),
                c.getStatus()
            });
        });
    }

    private void pesquisarPorNome(String nome) {

        List<Cliente> clientes = clienteDao.findByName(nome);
        DefaultTableModel dados = (DefaultTableModel) tabelaConsultaCliente.getModel();
        dados.setNumRows(0);

        clientes.stream().forEach((c) -> {
            dados.addRow(new Object[]{
                c.getId(),
                c.getNome(),
                c.getEmail(),
                c.getCpf(),
                c.getNascimento(),
                c.getApelido(),
                c.getObservacoes(),
                c.getStatus()
            });
        });
    }

    private void listarEndereco(int id) {

        Endereco end = enderecoDao.findById(id);
        txtRua.setText(end.getRua());
        txtNumero.setText(end.getNumero().toString());
        txtComplemento.setText(end.getComplemento());
        txtBairro.setText(end.getBairro());
        txtCidade.setText(end.getCidade());
        comboEstado.setSelectedItem(end.getEstado());
        txtCep.setText(end.getCep());

    }

    private void listarTelefones(int id) {

        Telefone tel = telefoneDao.findById(id);
        comboTipoTel.setSelectedItem(tel.getTipo());
        txtDdd.setText(tel.getDdd());
        txtTel.setText(tel.getNumero());
        comboTipoTel1.setSelectedItem(tel.getTipo1());
        txtDdd1.setText(tel.getDdd1());
        txtTel1.setText(tel.getNumero1());
        comboTipoTel2.setSelectedItem(tel.getTipo2());
        txtDdd2.setText(tel.getDdd2());
        txtTel2.setText(tel.getNumero2());

    }

    private void transferirDados() {

        painelAbas.setSelectedIndex(0);

        txtCodigo.setText(tabelaConsultaCliente.getValueAt(tabelaConsultaCliente.getSelectedRow(), 0).toString());
        txtNome.setText(tabelaConsultaCliente.getValueAt(tabelaConsultaCliente.getSelectedRow(), 1).toString());
        txtEmail.setText(tabelaConsultaCliente.getValueAt(tabelaConsultaCliente.getSelectedRow(), 2).toString());
        txtCpf.setText(tabelaConsultaCliente.getValueAt(tabelaConsultaCliente.getSelectedRow(), 3).toString());
        txtDataNasc.setText(tabelaConsultaCliente.getValueAt(tabelaConsultaCliente.getSelectedRow(), 4).toString().replaceAll("\\-", ""));
        txtApelido.setText(tabelaConsultaCliente.getValueAt(tabelaConsultaCliente.getSelectedRow(), 5).toString());
        txtObservavacoes.setText(tabelaConsultaCliente.getValueAt(tabelaConsultaCliente.getSelectedRow(), 6).toString());
        listarTelefones((Integer) tabelaConsultaCliente.getValueAt(tabelaConsultaCliente.getSelectedRow(), 0));
        listarEndereco((Integer) tabelaConsultaCliente.getValueAt(tabelaConsultaCliente.getSelectedRow(), 0));

    }

    private void iniciarCampoCpf() {
        try {
            if (comboCpfCnpj.getSelectedIndex() == 1) {
                txtCpf.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##.###.###/####-##")));
            } else {
                txtCpf.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
            }
        } catch (ParseException e) {
            System.out.println("Erro " + e);
        }
    }

    private void iniciarComboTipoCelular() {

        tipoTelDao.mostraStatus(comboTipoTel);
        tipoTelDao.mostraStatus(comboTipoTel1);
        comboTipoTel1.setSelectedIndex(1);
        tipoTelDao.mostraStatus(comboTipoTel2);
        comboTipoTel2.setSelectedIndex(2);
    }

    private void formataCel(JComboBox<TipoTel> tipoTel, JFormattedTextField campo) {

        try {
            if (tipoTel.getSelectedItem().toString().equals("Celular")) {
                campo.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#-####-####")));
            } else {
                campo.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####-####")));
            }

        } catch (ParseException e) {
            System.out.println("Erro " + e);
        }
    }

    private void limpatela() {
        LimpaTela.limpaTela(painelCadastraCliente);
        LimpaTela.limpaTela(painelTelefones);
        txtObservavacoes.setText(null);
        comboEstado.setSelectedItem("Selecione");
    }

    private void iniciarComboStatusPessoa() {
        statusPessoaDao.mostraStatus(comboStatusPessoa);
    }

    private boolean validarCampos() {
        try {
            if (txtCpf.getText().trim().length() < 14) {
                txtCpf.setBackground(new java.awt.Color(204, 0, 0));
                throw new ValidacaoException("Campo CPF não pode ser vazio.");
            }
            if (txtNome.getText().trim().length() == 0) {
                txtNome.setBackground(new java.awt.Color(204, 0, 0));
                throw new ValidacaoException("Campo Nome não pode ser vazio.");
            }
            if (txtCep.getText().trim().length() < 10) {
                txtCep.setBackground(new java.awt.Color(204, 0, 0));
                throw new ValidacaoException("Campo CEP não pode ser vazio.");
            }
            if (txtRua.getText().trim().length() == 0) {
                txtRua.setBackground(new java.awt.Color(204, 0, 0));
                throw new ValidacaoException("Campo Rua não pode ser vazio.");
            }
            if (txtCidade.getText().trim().length() == 0) {
                txtCidade.setBackground(new java.awt.Color(204, 0, 0));
                throw new ValidacaoException("Campo Cidade não pode ser vazio.");
            }
            if (txtNumero.getText().trim().length() == 0) {
                txtNumero.setBackground(new java.awt.Color(204, 0, 0));
                throw new ValidacaoException("Campo Numero não pode ser vazio.");
            }
            if (comboEstado.getSelectedItem().equals("Selecione")) {
                comboEstado.setBackground(new java.awt.Color(204, 0, 0));
                throw new ValidacaoException("Selecione o Estado.");
            }
            return true;
        } catch (ValidacaoException e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        return false;
    }

}